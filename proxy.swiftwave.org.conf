server {
    listen 443 ssl;
    server_name proxy.swiftwave.org;

    ssl_certificate /etc/letsencrypt/live/proxy.swiftwave.org/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/proxy.swiftwave.org/privkey.pem;

    location / {
        if ($http_x_proxy_pass) {
            set $proxy_pass_destination $http_x_proxy_pass;
        }

        # Only handle OPTIONS requests in Nginx
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-PROXY-PASS' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Handle /status route
        location = /status {
           add_header Content-Type 'text/plain; charset=utf-8';
           return 200 "OK";
        }

        proxy_pass http://$proxy_pass_destination;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Preserve existing CORS headers and add missing ones
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';

        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE', always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
}

server {
    listen 80;
    server_name proxy.swiftwave.org;
    return 301 https://$host$request_uri;
}
